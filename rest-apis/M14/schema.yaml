"components:\n  schemas:\n    ConnectedOuterService:\n      properties:\n        name:\n\
  \          type: string\n        version:\n          type: string\n      type: object\n\
  \    SchemaIdentity:\n      properties:\n        authority:\n          pattern:\
  \ ^[\\w\\-\\.]+$\n          type: string\n        entityType:\n          pattern:\
  \ ^[\\w\\-\\.]+$\n          type: string\n        id:\n          type: string\n\
  \        schemaVersionMajor:\n          format: int64\n          type: integer\n\
  \        schemaVersionMinor:\n          format: int64\n          type: integer\n\
  \        schemaVersionPatch:\n          format: int64\n          type: integer\n\
  \        source:\n          pattern: ^[\\w\\-\\.]+$\n          type: string\n  \
  \    required:\n      - authority\n      - entityType\n      - schemaVersionMajor\n\
  \      - schemaVersionMinor\n      - schemaVersionPatch\n      - source\n      type:\
  \ object\n    SchemaInfo:\n      properties:\n        createdBy:\n          type:\
  \ string\n        dateCreated:\n          format: date-time\n          type: string\n\
  \        schemaIdentity:\n          $ref: '#/components/schemas/SchemaIdentity'\n\
  \        scope:\n          enum:\n          - INTERNAL\n          - SHARED\n   \
  \       type: string\n        status:\n          enum:\n          - PUBLISHED\n\
  \          - OBSOLETE\n          - DEVELOPMENT\n          type: string\n       \
  \ supersededBy:\n          $ref: '#/components/schemas/SchemaIdentity'\n      required:\n\
  \      - schemaIdentity\n      - status\n      type: object\n    SchemaInfoResponse:\n\
  \      properties:\n        count:\n          format: int32\n          type: integer\n\
  \        offset:\n          format: int32\n          type: integer\n        schemaInfos:\n\
  \          items:\n            $ref: '#/components/schemas/SchemaInfo'\n       \
  \   type: array\n        totalCount:\n          format: int32\n          type: integer\n\
  \      type: object\n    SchemaRequest:\n      properties:\n        schema:\n  \
  \        type: object\n        schemaInfo:\n          $ref: '#/components/schemas/SchemaInfo'\n\
  \      required:\n      - schema\n      - schemaInfo\n      type: object\n    VersionInfo:\n\
  \      properties:\n        artifactId:\n          type: string\n        branch:\n\
  \          type: string\n        buildTime:\n          type: string\n        commitId:\n\
  \          type: string\n        commitMessage:\n          type: string\n      \
  \  connectedOuterServices:\n          items:\n            $ref: '#/components/schemas/ConnectedOuterService'\n\
  \          type: array\n        groupId:\n          type: string\n        version:\n\
  \          type: string\n      type: object\n  securitySchemes:\n    Authorization:\n\
  \      bearerFormat: Authorization\n      scheme: Bearer\n      type: http\ninfo:\n\
  \  title: Notification Service\n  version: '1.0'\nopenapi: 3.0.1\npaths:\n  /info:\n\
  \    get:\n      operationId: info\n      parameters:\n      - description: Tenant\
  \ Id\n        in: header\n        name: data-partition-id\n        required: true\n\
  \      responses:\n        '200':\n          content:\n            application/json:\n\
  \              schema:\n                $ref: '#/components/schemas/VersionInfo'\n\
  \          description: OK\n      tags:\n      - info-api\n  /schema:\n    get:\n\
  \      operationId: getSchemaInfoList\n      parameters:\n      - in: query\n  \
  \      name: authority\n        required: false\n        schema:\n          type:\
  \ string\n      - in: query\n        name: source\n        required: false\n   \
  \     schema:\n          type: string\n      - in: query\n        name: entityType\n\
  \        required: false\n        schema:\n          type: string\n      - in: query\n\
  \        name: schemaVersionMajor\n        required: false\n        schema:\n  \
  \        format: int64\n          type: integer\n      - in: query\n        name:\
  \ schemaVersionMinor\n        required: false\n        schema:\n          format:\
  \ int64\n          type: integer\n      - in: query\n        name: schemaVersionPatch\n\
  \        required: false\n        schema:\n          format: int64\n          type:\
  \ integer\n      - in: query\n        name: status\n        required: false\n  \
  \      schema:\n          type: string\n      - in: query\n        name: scope\n\
  \        required: false\n        schema:\n          type: string\n      - in: query\n\
  \        name: latestVersion\n        required: false\n        schema:\n       \
  \   type: boolean\n      - in: query\n        name: limit\n        required: false\n\
  \        schema:\n          default: 100\n          format: int32\n          type:\
  \ integer\n      - in: query\n        name: offset\n        required: false\n  \
  \      schema:\n          default: 0\n          format: int32\n          type: integer\n\
  \      - description: Tenant Id\n        in: header\n        name: data-partition-id\n\
  \        required: true\n      responses:\n        '200':\n          content:\n\
  \            '*/*':\n              schema:\n                $ref: '#/components/schemas/SchemaInfoResponse'\n\
  \          description: OK\n      tags:\n      - schema-controller\n    post:\n\
  \      operationId: createSchema\n      parameters:\n      - description: Tenant\
  \ Id\n        in: header\n        name: data-partition-id\n        required: true\n\
  \      requestBody:\n        content:\n          application/json:\n           \
  \ schema:\n              $ref: '#/components/schemas/SchemaRequest'\n        required:\
  \ true\n      responses:\n        '200':\n          content:\n            '*/*':\n\
  \              schema:\n                $ref: '#/components/schemas/SchemaInfo'\n\
  \          description: OK\n      tags:\n      - schema-controller\n    put:\n \
  \     operationId: upsertSchema\n      parameters:\n      - description: Tenant\
  \ Id\n        in: header\n        name: data-partition-id\n        required: true\n\
  \      requestBody:\n        content:\n          application/json:\n           \
  \ schema:\n              $ref: '#/components/schemas/SchemaRequest'\n        required:\
  \ true\n      responses:\n        '200':\n          content:\n            '*/*':\n\
  \              schema:\n                $ref: '#/components/schemas/SchemaInfo'\n\
  \          description: OK\n      tags:\n      - schema-controller\n  /schema/{id}:\n\
  \    get:\n      operationId: getSchema\n      parameters:\n      - in: path\n \
  \       name: id\n        required: true\n        schema:\n          type: string\n\
  \      - description: Tenant Id\n        in: header\n        name: data-partition-id\n\
  \        required: true\n      responses:\n        '200':\n          content:\n\
  \            '*/*':\n              schema:\n                type: object\n     \
  \     description: OK\n      tags:\n      - schema-controller\n  /schemas/system:\n\
  \    put:\n      operationId: upsertSystemSchema\n      parameters:\n      - description:\
  \ Tenant Id\n        in: header\n        name: data-partition-id\n        required:\
  \ true\n      requestBody:\n        content:\n          application/json:\n    \
  \        schema:\n              $ref: '#/components/schemas/SchemaRequest'\n   \
  \     required: true\n      responses:\n        '200':\n          content:\n   \
  \         '*/*':\n              schema:\n                $ref: '#/components/schemas/SchemaInfo'\n\
  \          description: OK\n      tags:\n      - system-schema-controller\nsecurity:\n\
  - Authorization: []\nservers:\n- url: /api/schema-service/v1\n"
